<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD position variables
hud_left_w = 160;
hud_left_h = 400;
hud_left_x = room_width-hud_left_w;
hud_left_y = 36;//(room_height-hud_left_h)/2;
hud_left_x_off = 7;
hud_left_y_off = 10;
hud_left_drawing = false;
hud_left_x_anim = hud_left_w;
hud_left_x_anim_spd = 10;

hud_bot_w = sprite_get_width(spr_hud_bottom);
hud_bot_h = sprite_get_height(spr_hud_bottom);
hud_bot_x = 0;
hud_bot_y = view_hview[0]-hud_bot_h;
hud_bot_x_off = 7;
hud_bot_y_off = 10;

play_room_w = room_width-hud_left_w;
play_room_h = room_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_escape)){
    audio_stop_sound(snd_background1);
    room_goto(rm_mainMenu);
}

if(global.selected_area != noone){
    if(!hud_left_drawing &amp;&amp; hud_left_x_anim != 0){
        hud_left_x_anim -= hud_left_x_anim_spd;
    }
}
else{
    if(hud_left_x_anim&lt;hud_left_w){
        hud_left_x_anim += hud_left_x_anim_spd;
    }
}

if(hud_left_x_anim &lt;= 0){
    hud_left_drawing = true;
    hud_left_x_anim = 0;
}
else{
    hud_left_drawing = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xan = hud_left_x_anim;
//drawing HUD background (menu)
draw_sprite(spr_turn_info, -1, view_xview[0]+(play_room_w/2), view_yview[0]);
draw_sprite(spr_hud_left, -1, view_xview[0]+hud_left_x+xan, view_yview[0]+hud_left_y );
draw_sprite(spr_hud_bottom, -1, view_xview[0]+hud_bot_x, view_yview[0]+hud_bot_y );

//drawing turn of players 
draw_set_halign(fa_center);
draw_set_color(c_black);
draw_set_font(f_info);
var turn_str;
if(obj_turn_control.player_turn==global.player_id)
    turn_str = "YOUR TURN";
else
    turn_str = "PLAYER" + string(obj_turn_control.player_turn)
draw_text(view_xview[0]+(play_room_w/2), view_yview[0]+8, turn_str);
draw_set_color(c_white);
draw_set_halign(fa_left);

//drawing left menu items
if (global.selected_area!=noone &amp;&amp; hud_left_drawing){
    var sel = global.selected_area;
    var yy = 15;
    var off = 0;
    var ii = 0;
    
    draw_set_color(c_black);
    draw_set_alpha(1);
    draw_set_font(f_menu);
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), sel.name);
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Owner: Player" + string(scr_get_owner(sel.id)));
    off = 12;
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Base land production:");
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Wood: " + string(sel.wood_res));
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Iron: " + string(sel.iron_res));
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Gold: " + string(sel.gold_res));
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Food: " + string(sel.food_res));
    
    off += 12;
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Units:");
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Swordmans: " + string(sel.units[0]));
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Archers: " + string(sel.units[1]));
    draw_text(hud_left_x+hud_left_x_off, hud_left_y+hud_left_y_off+off+ (yy*ii++), "Horsemans: " + string(sel.units[2]));
    
    draw_set_color(c_white);
}
    draw_set_color(c_black);
    draw_set_font(f_menu);
    /*draw_text(100,view_hview[0]-50,string(global.player_list[| global.player_id].wood_res));
    draw_text(130,view_hview[0]-50,string(global.player_list[| global.player_id].iron_res));
    draw_text(160,view_hview[0]-50,string(global.player_list[| global.player_id].gold_res));
    draw_text(190,view_hview[0]-50,string(global.player_list[| global.player_id].food_res)); */ 
    var _xx = 100;
    var _yy = 15;
    var _ii = 0;
    var _jj = 0;
    var str = "";
    draw_text(hud_bot_x+hud_bot_x_off + (_xx*_ii), hud_bot_y+hud_bot_y_off + (_yy*_jj++), "Resources: ");
    str = "Wood: " + string(global.player_list[| global.player_id].wood_stock) + " (+"+string(global.player_list[| global.player_id].wood_res)+")";
    draw_text(hud_bot_x+hud_bot_x_off + (_xx*_ii), hud_bot_y+hud_bot_y_off + (_yy*_jj), str);
    draw_sprite(spr_resource_icons_small,0,hud_bot_x+hud_bot_x_off + (_xx*_ii)+string_width(str)+4, hud_bot_y+hud_bot_y_off + (_yy*_jj++)+2);
    str = "Iron: " + string(global.player_list[| global.player_id].iron_stock) + " (+"+string(global.player_list[| global.player_id].iron_res)+")";
    draw_text(hud_bot_x+hud_bot_x_off + (_xx*_ii), hud_bot_y+hud_bot_y_off + (_yy*_jj), str);
    draw_sprite(spr_resource_icons_small,1,hud_bot_x+hud_bot_x_off + (_xx*_ii)+string_width(str)+4, hud_bot_y+hud_bot_y_off + (_yy*_jj++)+2);
    str = "Gold: " + string(global.player_list[| global.player_id].gold_stock) + " (+"+string(global.player_list[| global.player_id].gold_res)+")"
    draw_text(hud_bot_x+hud_bot_x_off + (_xx*_ii), hud_bot_y+hud_bot_y_off + (_yy*_jj), str);
    draw_sprite(spr_resource_icons_small,2,hud_bot_x+hud_bot_x_off + (_xx*_ii)+string_width(str)+4, hud_bot_y+hud_bot_y_off + (_yy*_jj++)+2);
    str = "Food: " + string(global.player_list[| global.player_id].food_stock) + " (+"+string(global.player_list[| global.player_id].food_res)+")"
    draw_text(hud_bot_x+hud_bot_x_off + (_xx*_ii), hud_bot_y+hud_bot_y_off + (_yy*_jj), str);
    draw_sprite(spr_resource_icons_small,3,hud_bot_x+hud_bot_x_off + (_xx*_ii)+string_width(str)+4, hud_bot_y+hud_bot_y_off + (_yy*_jj++)+2);
    
    
    draw_set_color(c_white);
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
