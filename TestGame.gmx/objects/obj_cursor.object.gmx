<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;

info_offset = 24;
info_inner_x = 5;
info_inner_y = 2;
info_height = 122;
spr_ind = 0;
spr_spd = 8;
alarm[0] = spr_spd;

global.can_click = true;
global.zoom = 1;
global.zoom_move = global.zoom;
global.zoom_scale = 0.01;
global.zoom_move_scale = 0.1;
global.zoom_scale_2 = 0.01;
global.zoom_max = 2;
global.zoom_min = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr_ind = ++spr_ind mod sprite_get_number(sprite_index)
alarm[0] = spr_spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x;
y = mouse_y;
if(instance_exists(obj_turn_control))
    if(obj_turn_control.player_turn == global.player_id){
        global.can_click = true;
    }
    else{
        global.can_click = false;
    }
if(instance_exists(obj_map_control)) {
    if (scr_check_turn(global.player_list[|global.player_id])){
        global.can_click = true;
    }
    else{
        global.can_click = false;
    }
}

if(room==rm_map){
    if(!instance_exists(obj_ingame_menu)){
        if(!global.can_click){
            sprite_index=spr_cursor_2;
        }
        else{
            sprite_index=spr_cursor_1;
        }
    }
    else{
        sprite_index=spr_cursor_1;
    }
}
else{
    sprite_index=spr_cursor_1;
}

//global.zoom_scale = global.zoom_scale_2 + (abs(global.zoom_move-global.zoom)/5);

if(mouse_wheel_up()){
    global.zoom_move+=global.zoom_move_scale;
}
if(mouse_wheel_down()){
    global.zoom_move-=global.zoom_move_scale;
}

if(global.zoom_move!=global.zoom){
    global.zoom += sign(global.zoom_move-global.zoom)*global.zoom_scale;
}

global.zoom = clamp(global.zoom, global.zoom_min, global.zoom_max);
global.zoom_move = clamp(global.zoom_move, global.zoom_min, global.zoom_max);





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
col_obj = collision_point( x, y, obj_area_parent, true, true );


if(col_obj!=noone){
    info_obj = col_obj;
}
else if (col_obj==noone){
    info_obj = noone;
}
else{
    info_obj = noone;
}

if(instance_exists(obj_map) &amp;&amp; info_obj!=noone &amp;&amp; col_obj.id==obj_map.id){
    info_obj = noone;
}

//if( place_meeting(x,y,obj_area_parent)){
if( info_obj != noone){
    var h = string_height(info_obj.name);
    var w = max(string_width(info_obj.name), 62);
    var xic = 6;
    var yoff = 8;

    draw_set_alpha(.95);
    draw_set_color(make_color_rgb(176,176,176));
    draw_rectangle(x+info_offset,y+yoff ,x+info_offset+w+(info_inner_x*2),y+info_height+info_inner_y,false);
    draw_set_color(make_color_rgb(32,32,32));
    draw_rectangle(x+info_offset,y+yoff ,x+info_offset+w+(info_inner_x*2),y+info_height+info_inner_y,true);
    draw_line(x+info_offset, y+h+info_inner_y+yoff, x+info_offset+w+(info_inner_x*2), y+h+info_inner_y+yoff)
    draw_set_font(f_info_small);
    draw_set_alpha(1);
    draw_set_color(make_color_rgb(0,0,0));
    draw_text(x+info_offset+info_inner_x, y+yoff+info_inner_y,info_obj.name);
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*1),info_obj.wood_res);
    draw_sprite(spr_resource_icons_small,0,x+info_offset+xic, y+h+info_inner_y+(14*1));
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*2),info_obj.iron_res);
    draw_sprite(spr_resource_icons_small,1,x+info_offset+xic, y+h+info_inner_y+(14*2));
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*3),info_obj.gold_res);
    draw_sprite(spr_resource_icons_small,2,x+info_offset+xic, y+h+info_inner_y+(14*3));
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*4),info_obj.food_res);
    draw_sprite(spr_resource_icons_small,3,x+info_offset+xic, y+h+info_inner_y+(14*4));
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*5),info_obj.population);
    draw_sprite(spr_resource_icons_small,4,x+info_offset+xic, y+h+info_inner_y+(14*5));
    draw_text(x+info_offset+info_inner_x+20, y+h+info_inner_y+(14*6),string_format((info_obj.pop_incr-1)*100, 0, 1)+"%");
    draw_sprite(spr_resource_icons_small,5,x+info_offset+xic, y+h+info_inner_y+(14*6));
    
}

//draw_self();

draw_sprite(sprite_index, spr_ind, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
